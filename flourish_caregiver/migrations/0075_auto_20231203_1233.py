# Generated by Django 3.1.14 on 2023-12-03 10:33

from django.db import migrations, models


def update_obj(apps, obj):
    caregiver_child_consent_cls = apps.get_model('flourish_caregiver',
                                                   'caregiverchildconsent')
    try:
        consent = caregiver_child_consent_cls.objects.filter(
            subject_consent__subject_identifier=obj.subject_identifier,
            study_child_identifier__isnull=True).latest(
            'consent_datetime')
    except caregiver_child_consent_cls.DoesNotExist:
        pass
    else:
        obj.child_subject_identifier = consent.subject_identifier
        obj.save_base(raw=True)


def get_onschedule_obj(apps, visit):
    onschedule_model_cls = apps.get_model(
        visit.schedule.onschedule_model)

    try:
        onschedule_obj = onschedule_model_cls.objects.get(
            subject_identifier=visit.subject_identifier,
            schedule_name=visit.appointment.schedule_name)
    except onschedule_model_cls.DoesNotExist:
        return None
    else:
        return onschedule_obj


def update_ultrasounds_obj(apps, obj):
    ultrasound_cls = apps.get_model('flourish_caregiver', 'ultrasound')
    try:
        ultrasound = ultrasound_cls.objects.get(
            maternal_visit=obj)
    except ultrasound_cls.DoesNotExist:
        pass
    else:
        onschedule_obj = get_onschedule_obj(apps, obj)
        if not onschedule_obj:
            return
        child_subject_identifier = getattr(onschedule_obj,
                                           'child_subject_identifier', None)
        ultrasound.child_subject_identifier = child_subject_identifier
        ultrasound.save_base(raw=True)


def generate_unique_child_subject_identifier(apps, schema_editor):
    maternal_delivery_cls = apps.get_model('flourish_caregiver', 'maternaldelivery')
    delivery_objs = maternal_delivery_cls.objects.all()

    for obj in delivery_objs:
        update_obj(apps, obj)


def populate_antenatal_child_subject_identifier(apps, schema_editor):
    antenatal_enrollment_model_cls = apps.get_model('flourish_caregiver',
                                                    'antenatalenrollment')
    for obj in antenatal_enrollment_model_cls.objects.all():
        update_obj(apps, obj)


def populate_ultrasound_child_subject_identifier(apps, schema_editor):
    maternal_visit_model_cls = apps.get_model('flourish_caregiver', 'maternalvisit')
    for obj in maternal_visit_model_cls.objects.all():
        update_ultrasounds_obj(apps, obj)


class Migration(migrations.Migration):

    dependencies = [
        ('flourish_caregiver', '0074_auto_20231101_2226'),
    ]

    operations = [
        migrations.AddField(
            model_name='maternaldelivery',
            name='child_subject_identifier',
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='antenatalenrollment',
            name='child_subject_identifier',
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='ultrasound',
            name='child_subject_identifier',
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.RunPython(populate_ultrasound_child_subject_identifier),
        migrations.RunPython(populate_antenatal_child_subject_identifier),
        migrations.RunPython(generate_unique_child_subject_identifier),
        migrations.AlterField(
            model_name='maternaldelivery',
            name='child_subject_identifier',
            field=models.CharField(max_length=50, unique=True, null=False),
        ),
        migrations.AlterField(
            model_name='antenatalenrollment',
            name='child_subject_identifier',
            field=models.CharField(max_length=50, unique=True, null=False),
        ),
        migrations.AlterField(
            model_name='ultrasound',
            name='child_subject_identifier',
            field=models.CharField(max_length=50, unique=True, null=False),
        ),
    ]
